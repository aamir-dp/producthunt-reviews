name: Fetch Product Hunt Reviews

on:
  workflow_dispatch:  # Allow manual trigger with input
    inputs:
      product_name:
        description: "Product name to fetch reviews for"
        required: true

jobs:
  fetch_reviews:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch Product ID from Product Hunt
        run: |
          PRODUCT_NAME="${{ github.event.inputs.product_name }}"
          echo "üîç Searching for Product: $PRODUCT_NAME"
          
          RESPONSE=$(curl -s -X POST "https://api.producthunt.com/v2/api/graphql" \
            -H "Authorization: Bearer ${{ secrets.PRODUCT_HUNT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"query\": \"{
                posts(query: \\\"$PRODUCT_NAME\\\", first: 1) {
                  edges { node { id name } }
                }
              }\"
            }")

          PRODUCT_ID=$(echo "$RESPONSE" | jq -r '.data.posts.edges[0].node.id')

          if [[ -z "$PRODUCT_ID" || "$PRODUCT_ID" == "null" ]]; then
            echo "‚ùå No product found!"
            exit 1
          fi

          echo "‚úÖ Found Product ID: $PRODUCT_ID"
          echo "PRODUCT_ID=$PRODUCT_ID" >> $GITHUB_ENV

      - name: Fetch All Reviews
        run: |
          POST_ID=$PRODUCT_ID
          NEXT_CURSOR=""
          echo "[" > reviews.json
          
          while true; do
            RESPONSE=$(curl -s -X POST "https://api.producthunt.com/v2/api/graphql" \
              -H "Authorization: Bearer ${{ secrets.PRODUCT_HUNT_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{
                \"query\": \"{
                  post(id: \\\"$POST_ID\\\") {
                    name
                    comments(first: 10, after: \\\"$NEXT_CURSOR\\\") {
                      pageInfo { hasNextPage endCursor }
                      edges { node { id body createdAt user { name } } }
                    }
                  }
                }\"
              }")

            echo "$RESPONSE" | jq -r '.data.post.comments.edges | map(.node) | @json' >> reviews.json

            NEXT_CURSOR=$(echo "$RESPONSE" | jq -r '.data.post.comments.pageInfo.endCursor')
            HAS_NEXT_PAGE=$(echo "$RESPONSE" | jq -r '.data.post.comments.pageInfo.hasNextPage')

            if [[ "$HAS_NEXT_PAGE" != "true" ]]; then
              break
            fi

            echo "," >> reviews.json
          done

          echo "]" >> reviews.json

      - name: Commit and Push Reviews
        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://github-actions:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git add reviews.json
          git commit -m "Updated Product Hunt reviews for $PRODUCT_NAME" || echo "‚ö†Ô∏è No changes to commit."
          git push origin main
